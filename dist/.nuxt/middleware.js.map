{"version":3,"sources":["../../.nuxt/middleware.js"],"names":["files","require","context","filenames","keys","getModule","filename","file","default","middleware","name","replace"],"mappings":";;;;;;AACA,IAAIA,QAAQC,QAAQC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,EAAuC,qBAAvC,CAAZ;AACA,IAAIC,YAAYH,MAAMI,IAAN,EAAhB;;AAEA,SAASC,SAAT,CAAoBC,QAApB,EAA8B;AAC5B,MAAIC,OAAOP,MAAMM,QAAN,CAAX;AACA,SAAOC,KAAKC,OAAL,GACHD,KAAKC,OADF,GAEHD,IAFJ;AAGD;AACD,IAAIE,aAAa,EAAjB;;AAEA;;;;;;AACA,uBAAqBN,SAArB,8HAAgC;AAAA,QAAvBG,QAAuB;;AAC9B,QAAII,OAAOJ,SAASK,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,SAAtC,EAAiD,EAAjD,CAAX;AACAF,eAAWC,IAAX,IAAmBL,UAAUC,QAAV,CAAnB;AACD;;;;;;;;;;;;;;;;kBAEcG,U","file":"middleware.js","sourcesContent":["\nlet files = require.context('@/middleware', false, /^\\.\\/(?!-).*\\.(js)$/)\nlet filenames = files.keys()\n\nfunction getModule (filename) {\n  let file = files(filename)\n  return file.default\n    ? file.default\n    : file\n}\nlet middleware = {}\n\n// Generate the middleware\nfor (let filename of filenames) {\n  let name = filename.replace(/^\\.\\//, '').replace(/\\.(js)$/, '')\n  middleware[name] = getModule(filename)\n}\n\nexport default middleware\n\n"]}