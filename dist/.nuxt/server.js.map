{"version":3,"sources":["../../.nuxt/server.js"],"names":["debug","require","color","isDev","noopApp","render","h","createNext","ssrContext","redirected","opts","res","nuxt","serverRendered","query","path","indexOf","url","writeHead","status","end","next","beforeRenderFns","app","router","_app","layout","data","error","meta","$meta","asyncData","beforeRender","Promise","all","map","fn","Components","nuxtState","renderErrorPage","errLayout","context","loadLayout","setLayout","render404Page","statusCode","message","s","Date","now","match","midd","name","length","options","layoutName","middleware","concat","forEach","Component","isValid","validate","params","route","_generate","promises","promise","then","cid","asyncDataResult","push","fetch","asyncDatas","r"],"mappings":"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","file":"server.js","sourcesContent":["import Vue from 'vue'\nimport clone from 'clone'\nimport { stringify } from 'querystring'\nimport { omit } from 'lodash'\nimport middleware from './middleware'\nimport { createApp, NuxtError } from './index'\nimport { applyAsyncData, sanitizeComponent, getMatchedComponents, getContext, middlewareSeries, promisify, urlJoin } from './utils'\n\nconst debug = require('debug')('nuxt:render')\ndebug.color = 4 // force blue color\n\nconst isDev = true\n\nconst noopApp = () => new Vue({ render: (h) => h('div') })\n\nconst createNext = ssrContext => opts => {\n  ssrContext.redirected = opts\n  // If nuxt generate\n  if (!ssrContext.res) {\n    ssrContext.nuxt.serverRendered = false\n    return\n  }\n  opts.query = stringify(opts.query)\n  opts.path = opts.path + (opts.query ? '?' + opts.query : '')\n  if (opts.path.indexOf('http') !== 0 && ('/' !== '/' && opts.path.indexOf('/') !== 0)) {\n    opts.path = urlJoin('/', opts.path)\n  }\n  // Avoid loop redirect\n  if (opts.path === ssrContext.url) {\n    ssrContext.redirected = false\n    return\n  }\n  ssrContext.res.writeHead(opts.status, {\n    'Location': opts.path\n  })\n  ssrContext.res.end()\n}\n\n// This exported function will be called by `bundleRenderer`.\n// This is where we perform data-prefetching to determine the\n// state of our application before actually rendering it.\n// Since data fetching is async, this function is expected to\n// return a Promise that resolves to the app instance.\nexport default async ssrContext => {\n  // Create ssrContext.next for simulate next() of beforeEach() when wanted to redirect\n  ssrContext.redirected = false\n  ssrContext.next = createNext(ssrContext)\n  // Used for beforeNuxtRender({ Components, nuxtState })\n  ssrContext.beforeRenderFns = []\n\n  // Create the app definition and the instance (created for each request)\n  const { app, router } = await createApp(ssrContext)\n  const _app = new Vue(app)\n\n  // Nuxt object (window.__NUXT__)\n  ssrContext.nuxt = { layout: 'default', data: [], error: null, serverRendered: true }\n  // Add meta infos (used in renderer.js)\n  ssrContext.meta = _app.$meta()\n  // Keep asyncData for each matched component in ssrContext (used in app/utils.js via this.$ssrContext)\n  ssrContext.asyncData = {}\n\n  const beforeRender = async () => {\n    // Call beforeNuxtRender() methods\n    await Promise.all(ssrContext.beforeRenderFns.map((fn) => promisify(fn, { Components, nuxtState: ssrContext.nuxt })))\n    \n  }\n  const renderErrorPage = async () => {\n    // Load layout for error page\n    let errLayout = (typeof NuxtError.layout === 'function' ? NuxtError.layout(app.context) : NuxtError.layout)\n    ssrContext.nuxt.layout = errLayout || 'default'\n    await _app.loadLayout(errLayout)\n    _app.setLayout(errLayout)\n    await beforeRender()\n    return _app\n  }\n  const render404Page = () => {\n    app.context.error({ statusCode: 404, message: 'This page could not be found' })\n    return renderErrorPage()\n  }\n\n  const s = isDev && Date.now()\n\n  // Components are already resolved by setContext -> getRouteData (app/utils.js)\n  const Components = getMatchedComponents(router.match(ssrContext.url))\n\n  \n\n  /*\n  ** Call global middleware (nuxt.config.js)\n  */\n  let midd = []\n  midd = midd.map((name) => {\n    if (typeof name === 'function') return name\n    if (typeof middleware[name] !== 'function') {\n      ssrContext.error({ statusCode: 500, message: 'Unknown middleware ' + name })\n    }\n    return middleware[name]\n  })\n  await middlewareSeries(midd, app.context)\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) return noopApp()\n  if (ssrContext.nuxt.error) return renderErrorPage()\n\n  /*\n  ** Set layout\n  */\n  let layout = Components.length ? Components[0].options.layout : NuxtError.layout\n  if (typeof layout === 'function') layout = layout(app.context)\n  await _app.loadLayout(layout)\n  layout = _app.setLayout(layout)\n  // ...Set layout to __NUXT__\n  ssrContext.nuxt.layout = _app.layoutName\n\n  /*\n  ** Call middleware (layout + pages)\n  */\n  midd = []\n  if (layout.middleware) midd = midd.concat(layout.middleware)\n  Components.forEach((Component) => {\n    if (Component.options.middleware) {\n      midd = midd.concat(Component.options.middleware)\n    }\n  })\n  midd = midd.map((name) => {\n    if (typeof name === 'function') return name\n    if (typeof middleware[name] !== 'function') {\n      app.context.error({ statusCode: 500, message: 'Unknown middleware ' + name })\n    }\n    return middleware[name]\n  })\n  await middlewareSeries(midd, app.context)\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) return noopApp()\n  if (ssrContext.nuxt.error) return renderErrorPage()\n\n  /*\n  ** Call .validate()\n  */\n  let isValid = true\n  Components.forEach((Component) => {\n    if (!isValid) return\n    if (typeof Component.options.validate !== 'function') return\n    isValid = Component.options.validate({\n      params: app.context.route.params || {},\n      query: app.context.route.query  || {},\n      \n    })\n  })\n  // ...If .validate() returned false\n  if (!isValid) {\n    // Don't server-render the page in generate mode\n    if (ssrContext._generate) ssrContext.nuxt.serverRendered = false\n    // Render a 404 error page\n    return render404Page()\n  }\n\n  // If no Components found, returns 404\n  if (!Components.length) return render404Page()\n\n  // Call asyncData & fetch hooks on components matched by the route.\n  let asyncDatas = await Promise.all(Components.map(Component => {\n    let promises = []\n\n    // Call asyncData(context)\n    if (Component.options.asyncData && typeof Component.options.asyncData === 'function') {\n      let promise = promisify(Component.options.asyncData, app.context)\n      promise.then(asyncDataResult => {\n        ssrContext.asyncData[Component.cid] = asyncDataResult\n        applyAsyncData(Component)\n        return asyncDataResult\n      })\n      promises.push(promise)\n    } else {\n      promises.push(null)\n    }\n\n    // Call fetch(context)\n    if (Component.options.fetch) {\n      promises.push(Component.options.fetch(app.context))\n    }\n    else {\n      promises.push(null)\n    }\n\n    return Promise.all(promises)\n  }))\n\n  if (asyncDatas.length) debug('Data fetching ' + ssrContext.url + ': ' + (Date.now() - s) + 'ms')\n\n  // datas are the first row of each\n  ssrContext.nuxt.data = asyncDatas.map(r => r[0] || {})\n\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) return noopApp()\n  if (ssrContext.nuxt.error) return renderErrorPage()\n\n  // Call beforeNuxtRender methods & add store state\n  await beforeRender()\n\n  return _app\n}\n"]}